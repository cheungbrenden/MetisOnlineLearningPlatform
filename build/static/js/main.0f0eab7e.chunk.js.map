{"version":3,"sources":["Login.js","reportWebVitals.js","index.js"],"names":["Login","useState","username","setUsername","password","setPassword","className","Form","onSubmit","event","preventDefault","Group","size","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","block","disabled","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAgDeA,MA1Cf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAUA,OACI,qBAAKC,UAAU,QAAf,SAEE,eAACC,EAAA,EAAD,CAAMC,SAPZ,SAAsBC,GACpBA,EAAMC,kBAMF,UACE,oBAAIJ,UAAU,OAAd,oBACA,eAACC,EAAA,EAAKI,MAAN,CAAYL,UAAU,OAAOM,KAAK,KAAKC,UAAU,WAAjD,UACE,cAACN,EAAA,EAAKO,MAAN,uBACA,cAACP,EAAA,EAAKQ,QAAN,CACIC,WAAS,EACTC,KAAK,OACLC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAOjB,EAAYiB,EAAEC,OAAOH,aAG5C,eAACX,EAAA,EAAKI,MAAN,CAAYL,UAAU,OAAOM,KAAK,KAAKC,UAAU,WAAjD,UACE,cAACN,EAAA,EAAKO,MAAN,uBACA,cAACP,EAAA,EAAKQ,QAAN,CACIE,KAAK,WACLC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAYe,EAAEC,OAAOH,aAG1C,cAACI,EAAA,EAAD,CAAQhB,UAAU,mCAAmCiB,OAAK,EAACX,KAAK,KAAKK,KAAK,SAASO,WA7BpFtB,EAASuB,OAAS,GAAKrB,EAASqB,OAAS,GA6BxC,yBC5BGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f0eab7e.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n      <div className=\"Login\">\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <h3 className=\"mb-3\">Log In</h3>\r\n          <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n                autoFocus\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n            <Button className=\"btn btn-primary btn-lg btn-block\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Login';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}